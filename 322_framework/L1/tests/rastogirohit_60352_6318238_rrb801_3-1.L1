(:main
    (:main
        0 0
        //size of array 
        rdi <- 21

        mem rsp -8 <- :write_array_ret
        call :write_array 1
        :write_array_ret

        mem rsp -8 <- :array_sum_ret
        rdi <- rax
        call :array_sum 1
        :array_sum_ret
        
        mem rsp -8 <- :is_odd_ret
        rdi <- rax
        call :is_odd 1
        :is_odd_ret
        rdi <- rax
        call print 1

        return
    )

    (:write_array
        1 2
        rsi <- 1
        mem rsp 0 <- rdi
        call allocate 2
        rcx <- rax
        rcx += 8
        
        //init array index and store array length
        rdx <- 0
        r10 <- mem rsp 0

        :write_loop
        r11 <- rdx
        mem rcx 0 <- r11
        rcx += 8
        rdx += 1
        cjump rdx < r10 :write_loop

        return
    )

    (:array_sum
        1 0

        rcx <- rdi
        //set loop index, accumulator, length of array, curr arr elem pointer
        rdx <- 0
        r8 <- 0
        r11 <- mem rcx 0
        rcx += 8

        goto :loop

        :loop
        cjump rdx < r11 :add :done 

        :add
        r9 <- mem rcx 0
        r8 += r9
        rdx += 1
        rcx += 8
        goto :loop

        :done 
        r8 <<= 1
        r8 += 1
        rax <- r8
        return
    )

    (:is_odd
        1 0
        rax <- rdi
        rax &= 1
        rax <<= 1
        rax += 1
        return 
    )
        

)
