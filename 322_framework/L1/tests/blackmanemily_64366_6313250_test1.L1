(:main 
	(:main 
	0 1 
	rdi <- 6
	rcx <- 3
	rdi += rcx //rdi = 6+3
	rdi += rcx  //rdi = rdi + 3 //should be 12
	rdi <<= 1 
	rdi += 1 //at this point rdi = 25 (encoded 12) 

	rsi <- 3
	rsi += 8
	rsi += 8 
	rsi <<= 1
	rsi += 1  // should be rsi = 39 (encoded 19)

	rdi >>= 1
	rsi >>= 1
	rdi += rsi  // should be 12 + 19 = 31 
	rdi <<= 1
	rdi += 1
	mem rsp 0 <- rdi
	call print 1 //should get 31 
	rdi <- mem rsp 0
	call print 1 //should get 31 again
	
	mem rsp -8 <- :gohere
	call :boring 0
	:gohere
	rdi <- rax
	call print 1
	return)

	(:boring
	0 0
	rax <- 5
	return)
)

// expected output:
// 31
// 31
// 2
