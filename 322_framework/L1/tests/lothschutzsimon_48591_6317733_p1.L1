(:main
	
	(:main
		0 0
		//Make an array of length 5 full of 12s
		rdi <- 11
		rsi <- 25
		call allocate 2

		//Print each element of the array conditionally
		rdi <- rax
		mem rsp -8 <- :pArr_ret
		call :printArrayG 1
		:pArr_ret
		return
	)

	(:printArrayG
		1 2
		//Save callee registers
		mem rsp 0 <- r12
		mem rsp -8 <- r13

		r12 <- mem rdi 0
		r13 <- rdi

		//Print loop
		:loop
		cjump r12 = 0 :end
		r13 += 8
		r12 -= 1
		rdi <- mem r13 0
		//If the array element is less than 6 do not print it, 
		//else do some arbitrary math and print it
		cjump rdi < 13 :loop
		rdi -= 3
		rdi &= 18
		rcx <- 2
		rcx *= 3
		rdi <<= rcx
		rdi += 1		
		call print 1
		goto :loop

		:end
		r12 <- mem rsp 0
		r13 <- mem rsp -8
		return
	)	
)
