(:main
	(:main
		0 0
		// Starting number
		r12 <- 3
		// Sum
		r13 <- 1
		goto :square
		:outer
		r13 -= 1
		r13 += rax
		r12 += 2
		// Print the most recent square
		rdi <- rax
		call print 1
		// Now print the running sum
		rdi <- r13
		call print 1
		// And finally print 'nil' to indicate that one block is done
		rdi <- 0
		call print 1
		// Continue until after 100
		cjump r12 = 203 :end :square
		:end
		return
		
		:square
		// Print the currently squaring number
		rdi <- r12
		call print 1
		rax <- r12
		// Strip encoding and square rax
		rax -= 1
		rax >>= 1
		rax *= rax
		// Then reencode
		rax <<= 1
		rax += 1
		goto :outer
	)
)