define :main () {
 :entry
 newVar1 <- 10 >> 1
 newVar0 <- newVar1
 newVar2 <- 8 >> 1
 newVar0 <- newVar0 * newVar2
 newVar3 <- 15 >> 1
 newVar0 <- newVar0 * newVar3
 newVar0 <- newVar0 << 1
 newVar0 <- newVar0 + 1
 newVar0 <- newVar0 + 8
 A <- call allocate (newVar0, 1)
 newVar4 <- A + 8
 store newVar4 <- 7
 newVar5 <- A + 16
 store newVar5 <- 10
 newVar6 <- A + 24
 store newVar6 <- 8
 newVar7 <- A + 32
 store newVar7 <- 15
 newVar9 <- 0
 newVar10 <- A + 24
 newVar11 <- load newVar10
 newVar12 <- newVar11 >> 1
 newVar13 <- A + 32
 newVar14 <- load newVar13
 newVar15 <- newVar14 >> 1
 newVar16 <- 1
 newVar16 <- newVar15 * newVar16
 newVar17 <- 4 * newVar16
 newVar9 <- newVar17 + newVar9
 newVar16 <- newVar12 * newVar16
 newVar18 <- 1 * newVar16
 newVar9 <- newVar18 + newVar9
 newVar9 <- newVar9 + 5
 newVar8 <- newVar9 * 8
 newVar8 <- newVar8 + 40
 newVar19 <- A + newVar8
 store newVar19 <- 5
 v <- 5
 var <- call :find (A, v)
 call print (var)
 v <- 2
 var <- call :find (A, v)
 call print (var)
 newVar21 <- 0
 newVar22 <- A + 24
 newVar23 <- load newVar22
 newVar24 <- newVar23 >> 1
 newVar25 <- A + 32
 newVar26 <- load newVar25
 newVar27 <- newVar26 >> 1
 newVar28 <- 1
 newVar28 <- newVar27 * newVar28
 newVar29 <- 6 * newVar28
 newVar21 <- newVar29 + newVar21
 newVar28 <- newVar24 * newVar28
 newVar30 <- 8 * newVar28
 newVar21 <- newVar30 + newVar21
 newVar21 <- newVar21 + 14
 newVar20 <- newVar21 * 8
 newVar20 <- newVar20 + 40
 newVar31 <- A + newVar20
 store newVar31 <- 4
 v <- 4
 var <- call :find (A, v)
 call print (var)
 return 
}

define :find (A, v) {
 :entry
 newVar0 <- 0 * 8
 newVar1 <- newVar0 + 16
 newVar2 <- A + newVar1
 dim0 <- load newVar2
 newVar3 <- 1 * 8
 newVar4 <- newVar3 + 16
 newVar5 <- A + newVar4
 dim1 <- load newVar5
 newVar6 <- 2 * 8
 newVar7 <- newVar6 + 16
 newVar8 <- A + newVar7
 dim2 <- load newVar8
 i <- 0
 j <- 0
 k <- 0
 br :loop
 :loop
 newVar10 <- 0
 newVar11 <- A + 24
 newVar12 <- load newVar11
 newVar13 <- newVar12 >> 1
 newVar14 <- A + 32
 newVar15 <- load newVar14
 newVar16 <- newVar15 >> 1
 newVar17 <- 1
 newVar17 <- newVar16 * newVar17
 newVar18 <- j * newVar17
 newVar10 <- newVar18 + newVar10
 newVar17 <- newVar13 * newVar17
 newVar19 <- i * newVar17
 newVar10 <- newVar19 + newVar10
 newVar10 <- newVar10 + k
 newVar9 <- newVar10 * 8
 newVar9 <- newVar9 + 40
 newVar20 <- A + newVar9
 val <- load newVar20
 val_cmp <- val = v
 br val_cmp :found :inc 
 :inc
 br :inck
 :inck
 k <- k + 1
 over <- k >= dim2
 br over :resetk :loop 
 :resetk
 k <- 0
 br :incj
 :incj
 j <- j + 1
 over <- j >= dim1
 br over :resetj :loop 
 :resetj
 j <- 0
 br :inci
 :inci
 i <- i + 1
 over <- i >= dim0
 br over :not_found :loop 
 :found
 return 3
 :not_found
 return 1
}

