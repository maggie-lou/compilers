// encoded sub
// rdi, rsi, rdx, rcx, r8, r9
(:main
 (:encode
  1 0 // rdi = n
  %n <- rdi
  %n <<= 1
  %n += 1
  rax <- %n
  return)
 (:decode
  1 0 // rdi = n
  %n <- rdi
  %n >>= 1
  rax <- %n
  return)
 (:encoded_sub_unopt
  2 0 // rdi = a, rsi = b :: a - b
  // unoptimized version
  %a <- rdi // r12
  %b <- rsi // r13

  mem rsp -8 <- :encoded_sub__ret_addr__decode_a
  call :decode 1
  :encoded_sub__ret_addr__decode_a
  %a_decoded <- rax // r12

  rdi <- %b
  mem rsp -8 <- :encoded_sub__ret_addr__decode_b
  call :decode 1
  :encoded_sub__ret_addr__decode_b
  %b_decoded <- rax

  %diff_decoded <- %a_decoded
  %diff_decoded -= %b_decoded

  rdi <- %diff_decoded
  mem rsp -8 <- :encoded_sub__ret_addr__encode
  call :encode 1
  :encoded_sub__ret_addr__encode

  return)
 (:encoded_sub_opt
  2 0 // rdi = a, rsi = b :: a - b
  %a <- rdi
  %b <- rsi
  %a -= %b
  %a += 1
  rax <- %a
  return)
 (:main
  0 0
  %encoded_7 <- 15
  %encoded_2 <- 5

  rdi <- %encoded_7
  rsi <- %encoded_2
  mem rsp -8 <- :main__ret_addr__encoded_sub_unopt
  call :encoded_sub_unopt 2
  :main__ret_addr__encoded_sub_unopt

  rdi <- rax
  call print 1

  rdi <- %encoded_7
  rsi <- %encoded_2
  mem rsp -8 <- :main__ret_addr__encoded_sub_opt
  call :encoded_sub_opt 2
  :main__ret_addr__encoded_sub_opt

  rdi <- rax
  call print 1

  return))
