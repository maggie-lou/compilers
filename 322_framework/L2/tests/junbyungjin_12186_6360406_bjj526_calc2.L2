(:go
	(:go
		0 0
		rdi <- 4
		rsi <- 3
		mem rsp -8 <- :divide_ret
		call :divide 2
		:divide_ret
		rdi <- rax
		call print 1

		rdi <- 15
		rsi <- 3
		call allocate 2
		%var <- rax
		rdi <- rax
		rsi <- 100
		mem rsp -8 <- :setarray_ret
		call :setarray 2
		:setarray_ret
		rdi <- %var
		call print 1

		return
	)

	(:divide
		2 0
		%var2 <- rdi
		%var1 <- 0
		:loop
		cjump %var2 < rsi :out :more
		:more
		%var1 += 1
		%var2 -= rsi
		goto :loop
		:out
		%var2 <<= 1
		%var2 += 1
		rdi <- %var2
		call print 1
        %var1 <<= 1
        %var1 += 1
		rax <- %var1
		return
	)

	(:setarray
		2 0
		// array is contiguously stored
		%var1 <- mem rdi 0
		%var2 <- rsi
		rdi += 8
		%var2 <<= 1
		%var2 += 1
		:loop2
		cjump %var1 = 0 :out2 :more2
		:more2
		mem rdi 0 <- %var2
		%var1 -= 1
		rdi += 8
		goto :loop2
		:out2
		return
	)
)

