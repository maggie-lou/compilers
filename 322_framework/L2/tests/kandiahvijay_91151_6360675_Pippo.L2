(:main
	(:main 
		// Creates 7-element array with numbers of order 2^n where n:0->6 and then calls a function to find the sum of all numbers in that array.
		0 0

		rdi <- 15
		rsi <- 7
		call allocate 2
		%element <- 3
		%Initptr <- rax
		%Currentptr<- %Initptr
		%Currentptr +=8
		%count <- 1
		goto :fill_array

		:fill_array
		cjump 15 < %element :print_array
		%count <<= 1
		%count += 1
		mem %Currentptr 0 <- %count
		%count -= 1
		%Currentptr +=8
		%element +=2
		goto :fill_array
	
		:print_array
		rdi <- %Initptr
		call print 1
		rdi <- %Initptr
		mem rsp -8 <- :ret
		call :Sum 1

		:ret
		rdi <- rax
		rdi <<= 1
		rdi += 1
		call print 1
		return
	)

	(:Sum
		1 0
		%Currentptr <- rdi
		%Currentptr += 8
		%element <- 1
		rax <- 0
		goto :add

		:add
		cjump 15 < %element :stop
		%sum <- mem %Currentptr 0
		%sum >>= 1
		rax += %sum
		%Currentptr +=8
		%element +=2
		goto :add

		:stop
		return
	)
)