(:go
  (:go
    0 0

    %saved <- rbp

    // init list of vectors
    rdi <- 5
    rsi <- 0
    call allocate 2
    %arr <- rax

    // init vector 1
    rdi <- 7
    rsi <- 1
    call allocate 2
    mem %arr 8 <- rax

    mem rax 8 <- 3
    mem rax 16 <- 5
    mem rax 24 <- 7


    // init vector 2
    rdi <- 7
    rsi <- 1
    call allocate 2
    mem %arr 16 <- rax

    mem rax 8 <- 9
    mem rax 16 <- 11
    mem rax 24 <- 13

    rdi <- %arr
    mem rsp -8 <- :dot_product_ret
    call :dot_product 1
    :dot_product_ret

    rdi <- rax
    call print 1

    rbp <- %saved

    return
  )

  (:dot_product
    1 0

    rcx <- mem rdi 8
    rdx <- mem rdi 16

    r11 <- mem rcx 0

    r10 <- 0
    rax <- 0

    :dot_product_loop
    r10 += 1

    // get elements
    r8 @ rcx r10 8
    r9 @ rdx r10 8
    r8 <- mem r8 0
    r9 <- mem r9 0

    // decode
    r8 >>= 1
    r9 >>= 1

    r8 *= r9
    rax += r8

    cjump r10 < r11 :dot_product_loop

    // encode
    rax <<= 1
    rax += 1

    return
  )
)
